lab 1

1.select staff_name,staff_sal,dept_code from staff_master;

2.select staff_name name,staff_code scode,design_code dcode,dept_code dpcode from staff_master;

3.select student_code,subject1,subject2,subject3,subject1+subject2+subject3 as total_marks from student_marks;

4. select * from staff_master where design_code in (select design_code from designation_master where design_name in ('Professor','Lecturer'));

5.select staff_code,staff_name,dept_code from staff_master s where (months_between(sysdate, s.hiredate) / 12) > 18;

6.select s.staff_name,d.design_name from staff_master s join designation_master d on s.design_code=d.design_code where s.hiredate < '01-jan-2003';

7.select s.staff_name,d.design_name,s.staff_sal*10 from staff_master s join designation_master d on s.design_code=d.design_code;

8.select s.staff_name,d.design_name,trunc(months_between(sysdate, s.hiredate) / 12) as experience from staff_master s join designation_master d on s.design_code=d.design_code where d.design_name='Lecturer';

9.select student_name || ', ' || dept_code as student_info from student_master;

10.select staff_name,staff_sal from staff_master where staff_sal between 12000 and 25000 order by staff_sal,staff_name;

11.select staff_name from staff_master mgr_code=null;

12.select student_name,dept_code,student_dob from student_master where student_dob between '01-jan-1981' and '31-march-1983';

13.select dept_code,sum(staff_sal) from staff_master group by dept_code,staff_code having staff_code not in (select distinct(mgr_code) from staff_master) and sum(staff_sal) > 20000;

14.select * from book_master b join book_transactions t on b.book_code=t.book_code where book_actual_return_date=null and book_expected_return_date = (select TRUNC(TO_DATE('20180720','YYYYMMDD') + 1, 'd') + 1 from dual);

15.select student_name,nvl(to_char(dept_code), 'No department') as Department from student_master;

16.select staff_name,LPAD('X',(staff_sal/1000),'X') from staff_master;

lab2..

1.select student_name,to_char(student_dob,'month, dd yyyy') from student_master WHERE TO_CHAR(STUDENT_DOB,'DAY') LIKE  ('%SATURDAY5') OR TO_CHAR(STUDENT_DOB,'DAY') LIKE  ('%SUNDAY');
2.SELECT STAFF_NAME,ROUND(MONTHS_BETWEEN(SYSDATE,HIREDATE)) AS MONTHS_WORKED FROM STAFF_MASTER;
3.select * from staff_master where staff_name like ('A%S');

4.select s.staff_name,d.design_name from staff_master s join designation_master d on s.design_code=d.design_code where regexp_like(s.staff_name,'(.N|..N)()(N$|S$)');

5.SELECT staff_name, LPAD(staff_sal, 15, '$') SALARY FROM staff_master;

6.select staff_name from staff_master where regexp_like(staff_name,'_');

7.select * from staff_master where extract(month from hiredate)=12;

8.select staff_name,staff_sal, 
case 
when staff_sal>=5000 then 'A'
when staff_sal>=25000 and staff_sal<50000 then 'B'
when staff_sal>=10000 and staff_sal<25000 then 'C'
else 'D'
end
from staff_master;

9.select staff_name,to_char(hiredate,'dd month yyyy') as hire_date,to_char(hiredate,'day') as day from staff_master order by mod(to_char(hiredate, 'D') + 5, 7);
 

10.select staff_name,LPAD('*',LENGTH(staff_name),'*') from staff_masters;

11.select staff_name,substr(staff_name,1,1)||LPAD('*',LENGTH(staff_name)-2,'*') || substr(staff_name,length(staff_name),length(staff_name))from staff_masters;

12.select staff_name from staff_master where extract(day from hiredate) >= 1 and extract(day from hiredate) <= 15;

13. select staff_name,hiredate,TO_CHAR(hiredate, 'DAY') from staff_master order by mod(to_char(hiredate, 'D') + 5, 7);

14.SELECT INSTR('Mississippi','i',3) "Position Found" FROM DUAL;

15.SELECT to_char(NEXT_DAY(LAST_DAY( SYSDATE ) - 7,'FRIDAY'),'dd month,yyyy') as paydate FROM   DUAL;

lab2.2

16.select max(staff_sal) highest,min(staff_sal) lowest,sum(staff_sal) as total,avg(staff_sal) average_salary from staff_master;

17.select dept_code,max(staff_sal) highest,min(staff_sal) lowest,sum(staff_sal) as total,avg(staff_sal) average_salary from staff_master group by dept_code;

18.select d.dept_code,d.dept_name,count(s.staff_code) from department_master d join staff_master s on d.dept_code=s.dept_code group by d.dept_code,d.dept_name;

19.select count(distinct(mgr_code)) as total_number_of_manager from staff_master;

20.select staff_code mgr_code,staff_name as mgr_name,min(staff_sal) from staff_master where staff_code in (select mgr_code from staff_master) and staff_sal > 10000 group by staff_code,staff_name order by 3 desc;









select s.staff_name,d.dept_name,s.staff_sal from staff_master s join department_master d on s.dept_code=d.dept_code where s.staff_sal < (select avg(s.staff_sal) from staff_master s group by d.dept_code);











lab3.1.


1.select s.staff_name,d.dept_code,d.dept_name,s.staff_sal from staff_master s join department_master d on s.dept_code=d.dept_code where s.staff_sal>20000;

2.select s.staff_name,d.dept_code,d.dept_name,s.staff_sal from staff_master s join department_master d on s.dept_code=d.dept_code where s.dept_code!=10 and s.staff_name like '%a%';

3.select s.staff_code staff#,s.staff_name staff,d.dept_name,s.mgr_code mgr#,ss.staff_name manager from staff_master s join staff_master ss on ss.staff_code=s.mgr_code join department_master d on s.dept_code=d.dept_code;

4.select s.student_code,s.student_name,d.dept_name,m.subject1,m.subject2,m.subject3 from  department_master d join student_master s on s.dept_code=d.dept_code join student_marks m on s.student_code=m.student_code where m.subject1>=60 and m.subject2>=60 and m.subject3>=60 and s.dept_code in (10,20);

5.select s.student_code,s.student_name,b.book_code,b.book_name from book_master b join book_transactions t on b.book_code=t.book_code join student_master s on s.student_code=t.student_code where t.book_expected_return_date = sysdate;

6.select s.staff_code,s.staff_name,de.dept_name,d.design_name,b.book_name,bb.book_issue_date from staff_master s inner join department_master de
on s.dept_code=de.dept_code inner join designation_master d on s.design_code=d.design_code inner join book_transactions bb on
s.staff_code=bb.staff_code inner join book_master b on b.book_code=bb.book_code where floor(sysdate-bb.book_issue_date)=30;

7.select s.staff_code,s.staff_name,d.design_name,dp.dept_name from department_master dp join staff_master s on s.dept_code=dp.dept_code join designation_master d on d.design_code=s.design_code where d.design_name!='HOD';

?8.select s.student_code,student_name,dept_name,m.subject1+m.subject2,m.subject3 as total marks,student_name as HOD from student_master s join department_master d on s.dept_name=d.dept_name

9.select s.staff_code,s.staff_name,ds.design_name,d.dept_name,b.book_code,b.book_name,b.book_pub_author,
(sysdate-t.book_expected_return_date)*5 as fine from department_master d join staff_master s on d.dept_code=s.dept_code join designation_master 
ds on ds.design_code=s.design_code join book_transactions t on s.staff_code=t.staff_code join book_master b on b.book_code=t.book_code;

10. select staff_code,staff_name,staff_sal from staff_master where staff_sal< (select avg(staff_sal) from staff_master);

11.select staff_code,staff_name from staff_master where staff_code not in (select distinct(mgr_code) from staff_master);

12.select book_pub_author,book_name from book_master group by book_pub_author,book_name having count(book_pub_author)>1;

13.select s.staff_code,s.staff_name,d.dept_name from staff_master s join department_master d on s.dept_code=d.dept_code join book_transactions t on t.staff_code=s.staff_code group by s.staff_code,s.staff_name,d.dept_name having count(t.staff_code) > 1;

14.select s.student_code,s.student_name,d.dept_name,m.subject1,m.subject2,m.subject3,m.subject1+m.subject2+m.subject3 as 
total from student_master s join department_master d on s.dept_code=d.dept_code join student_marks m on s.student_code=m.student_code where 
rownum<=10 order by 7;

15.select s.staff_name,d.dept_name,s.staff_sal from staff_master s join department_master d on s.dept_code=d.dept_code where s.staff_sal < (select avg(s.staff_sal) from staff_master s group by d.dept_code)  ;

?16. select s.staff_name,d.department_name from staff_master s join department_master d on s.dept_code=d.dept_code\

17.select s.student_code,s.student_name from student_master s join student_marks m on s.student_code=m.student_code join department_master d on s.dept_code=d.dept_code where d.dept_name='Computer Science' and m.student_year=extract(year from sysdate);

18. select s.student_code,s.student_name,d.dept_name from student_master s join department_master d on s.dept_code=d.dept_code where d.dept_code=(select dept_code from student_master group by dept_code having count(student_name)=(select max(count(student_name)) from student_master group by dept_code));

19. select s.staff_code,d.dept_name,ds.design_name,s.hiredate from staff_master s join department_master d on s.dept_code=d.dept_code join designation_master ds on ds.design_code=s.design_code where hiredate=(select max(hiredate) from staff_master);

20.select s1.staff_name,count(*) from Staff_master s1 join staff_master s2 on s1.staff_code=s2.mgr_code group by s1.staff_name;



lab 3.2


1.select * from current_products union select * from previous_products;

2.

3.select * from current_products intersect select * from previous_products;

4. select * from previous_products where pid not in (select pid from current_products intersect select pid from previous_products);



lab 4..


1. create table customer(cust_id number(5),cust_name number(10),addr1 varchar2(30),addr2 varchar2(30));

2. alter table customer modify cust_name varchar(30);

3.alter table customer add (gender varchar2(1),age number(3),phoneno number(10));

4.insert all into customer values(1000,'allen','#115','chicago','M',25,7878776)
into customer values(1001,'george','#116','france','M',25,434524)
into customer values(1002,'becker','#114','new york','M',45,431525)
select * from dual;

5.alter table customer add constraint custid_prim primary key (cust_id);

6. insert into customer values(a002,'john','#114 chicago','#114 chicago','M',45,439525);

7.alter table customer disable constraint custid_prim;
insert into customer values(1002,'becker','#114','new york','M',45,431525);
insert into customer values(1003,'nanapatekar','#115','india','M',45,431525);

8.alter table customer enable constraint custid_prim
*
ERROR at line 1:
ORA-02437: cannot validate (LAB2ETRG13.CUSTID_PRIM) - primary key violated

9.alter table customer drop constraint custid_prim;
insert into customer values(1002,'becker','#114','new york','M',45,431525);
insert into customer values(1003,'nanapatekar','#115','india','M',45,431525);

10.truncate table customer;

11.alter table customer add e_mail varchar2(10);

12.alter table customer drop column e_mail;

13.alter table customer add emailid number(10);

14.alter table customer set unused column emailid;

15.alter table customer drop unused columns;

16.comment on table customer is 'customer details';

17.select * from user_tab_comments where table_name='CUSTOMER';

18.comment on column customer.phoneno is 'personal contact number';

19select * from user_col_comments where table_name='CUSTOMER';

20.create table suppliers as select cust_id as supplid,cust_name as sname,addr1 as addr1,addr2 as addr2,phoneno as contactno from customer;

21.create table customermasters(cust_id number(5) primary key,cust_name varchar2(30) not null,addr1 varchar2(30) not null,addr2 varchar2(30) not null,gender varchar2(1),age number(3),phoneno number(10));


22.create sequence sq increment by 1;
create table accountsmaster(cust_id number(5),accno number(10,2) constraint ac_pk primary key,acc_type char(3),ledgrbalance number(10,2) not null);

23.alter table customermasters add foreign key(cust_id) references accountsmaster(accno);

24.insert all into customermasters values(1000,'allen','#115','chicago','M',25,7878776)
into customer values(1001,'george','#116','france','M',25,434524)
into customer values(1002,'becker','#114','new york','M',45,431525)
select * from dual;

25.alter table accountsmaster add constraint ch check(acc_type='nri' or acc_type='ind');

26.insert all into accountsmaster values(1000,sq.nextval,'nri',1000)
into accountsmaster values(1001,sq.nextval,'nri',2000)
into accountsmaster values(1002,sq.nextval,'ind',3000)
select * from dual;

27.alter table accountsmaster modify ledgrbalance number(10,2) check(ledgrbalance>5000);

28.alter table accountsmaster add constraint fkey foreign key(accno) references customermasters(cust_id) on delete cascade;

29.Create table accountdetails as select * from accountsmaster;

30.alter table accountsmaster rename to accountdetail;

31.CREATE VIEW Account_view AS SELECT Cust_id as customercode,accno as accountnumber,acc_type as typr,ledgrBalance as balance  from accountsmaster;

32.create view vacc_dtls as select * from accountdetail where acc_type='ind' and ledgrbalance<10000;

33.create view accvw11 as select * from accountdetail with read only;

34.SELECT staff_code,staff_name,staff_sal FROM (SELECT staff_code,staff_name,staff_sal FROM staff_master ORDER BY staff_sal DESC) WHERE ROWNUM <=1;


35.SELECT staff_code,staff_name,staff_sal FROM (SELECT staff_code,staff_name,staff_sal FROM staff_master ORDER BY staff_sal DESC) WHERE ROWNUM <=2;

36.create sequence sq.dept minvalue 40 maxvalue 200 increment by 10 cache 20;

37.insert into department_master values(sq_dept.nextval,'cse');
insert into department_master values(sq_dept.nextval,'ECE');

38.alter sequence sq_dept increment by 5;

39.drop sequence sq_dept;

40.create unique index no_name on department_master(dept_code);

41.SELECT index_name, table_name, uniqueness, status FROM user_indexes WHERE table_name='DEPARTMENT_MASTER';

42.CREATE PUBLIC SUNONYM synEmp for the STAFF_MASTER;

43.SELECT * FROM Synemp;



lab5.


1.create table employee as select * from emp where 1=3;

2. select * from employee;

3.update employee set job=(select job from employee where empno=7788),deptno=(select deptno from employee where empno=7788) where empno=7698;

4.delete * from employee where departmentname='sales';

5.update employee set deptno=(select deptno from employee where empno=7698) where empno=7788;

6.insert into emp (empno,ename,job,mgr,hiredate,sal,comm,deptno) values (1000,'Allen','Clerk',1001,12-jan-01,3000,2,10);
insert into emp (empno,ename,job,mgr,hiredate,sal,comm,deptno) values (1001,'George','Analyst',null,08-sep-92,5000,0,10);
insert into emp (empno,ename,job,mgr,hiredate,sal,comm,deptno) values (1002,'Becker','Manager',1000,04-nov-92,2800,4,20);
insert into emp (empno,ename,job,mgr,hiredate,sal,comm,deptno) values (1003,'Bill','Clerk',1002,04-nov-92,3000,0,20);


lab6.

1.insert into customermaster(cust_id,cust)name,addr1,addr2,gender,age,phoneno) values (6000,'john','#115 Chicago','#115 Chicago','M',25,7878776)

2.savepoint sp1;

3.insert into customermaster(cust_id,cust)name,addr1,addr2,gender,age,phoneno) values (6003,'john','#115 Chicago','#115 Chicago','M',25,7878776)

4.rollbaCK to SP1;
